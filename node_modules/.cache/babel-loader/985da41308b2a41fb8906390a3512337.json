{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"C:\\\\Users\\\\seest\\\\Desktop\\\\projects\\\\react-quiz\\\\src\\\\components\\\\QuestionCard.tsx\";\nimport React from 'react';\n\nconst QuestionCard = ({\n  question,\n  answers,\n  callback,\n  userAnswer,\n  questionNr,\n  totalQuestions\n}) => /*#__PURE__*/_jsxDEV(\"div\", {\n  children: [/*#__PURE__*/_jsxDEV(\"p\", {\n    className: \"number\",\n    children: [\"Question: \", questionNr, \" / \", totalQuestions]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 15,\n    columnNumber: 13\n  }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n    dangerouslySetInnerHTML: {\n      __html: question\n    }\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 18,\n    columnNumber: 13\n  }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n    children: answers.map(answer => /*#__PURE__*/_jsxDEV(\"div\", {\n      children: /*#__PURE__*/_jsxDEV(\"button\", {\n        disabled: userAnswer,\n        onClick: callback,\n        children: /*#__PURE__*/_jsxDEV(\"span\", {\n          dangerouslySetInnerHTML: {\n            __html: answer\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 24,\n          columnNumber: 29\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 23,\n        columnNumber: 25\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 22,\n      columnNumber: 21\n    }, this))\n  }, \"answer\", false, {\n    fileName: _jsxFileName,\n    lineNumber: 20,\n    columnNumber: 13\n  }, this)]\n}, void 0, true, {\n  fileName: _jsxFileName,\n  lineNumber: 14,\n  columnNumber: 9\n}, this);\n\n_c = QuestionCard;\nexport default QuestionCard;\n\nvar _c;\n\n$RefreshReg$(_c, \"QuestionCard\");","map":{"version":3,"sources":["C:/Users/seest/Desktop/projects/react-quiz/src/components/QuestionCard.tsx"],"names":["React","QuestionCard","question","answers","callback","userAnswer","questionNr","totalQuestions","__html","map","answer"],"mappings":";;AAAA,OAAOA,KAAP,MAAkB,OAAlB;;AAWA,MAAMC,YAA6B,GAAG,CAAC;AAACC,EAAAA,QAAD;AAAWC,EAAAA,OAAX;AAAoBC,EAAAA,QAApB;AAA8BC,EAAAA,UAA9B;AAA0CC,EAAAA,UAA1C;AAAsDC,EAAAA;AAAtD,CAAD,kBAE9B;AAAA,0BACI;AAAG,IAAA,SAAS,EAAC,QAAb;AAAA,6BACeD,UADf,SAC8BC,cAD9B;AAAA;AAAA;AAAA;AAAA;AAAA,UADJ,eAII;AAAG,IAAA,uBAAuB,EAAE;AAAEC,MAAAA,MAAM,EAAEN;AAAV;AAA5B;AAAA;AAAA;AAAA;AAAA,UAJJ,eAMI;AAAA,cACKC,OAAO,CAACM,GAAR,CAAYC,MAAM,iBACf;AAAA,6BACI;AAAQ,QAAA,QAAQ,EAAEL,UAAlB;AAA8B,QAAA,OAAO,EAAED,QAAvC;AAAA,+BACI;AAAM,UAAA,uBAAuB,EAAE;AAAEI,YAAAA,MAAM,EAAEE;AAAV;AAA/B;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA,YADH;AADL,KAAS,QAAT;AAAA;AAAA;AAAA;AAAA,UANJ;AAAA;AAAA;AAAA;AAAA;AAAA,QAFR;;KAAMT,Y;AAsBN,eAAeA,YAAf","sourcesContent":["import React from 'react';\r\n\r\ntype Props = {\r\n    question: string;\r\n    answers: string[];\r\n    callback: any;\r\n    userAnswer: any;\r\n    questionNr: number;\r\n    totalQuestions: number;\r\n}\r\n\r\nconst QuestionCard: React.FC<Props> = ({question, answers, callback, userAnswer, questionNr, totalQuestions}) => (\r\n    (\r\n        <div>\r\n            <p className=\"number\">\r\n                Question: {questionNr} / {totalQuestions}\r\n            </p>\r\n            <p dangerouslySetInnerHTML={{ __html: question}} />\r\n\r\n            <div key=\"answer\">\r\n                {answers.map(answer => (\r\n                    <div>\r\n                        <button disabled={userAnswer} onClick={callback}>\r\n                            <span dangerouslySetInnerHTML={{ __html: answer}}/>\r\n                        </button>\r\n                    </div>\r\n                ))}\r\n            </div>\r\n        </div>\r\n        \r\n    )\r\n);\r\n\r\nexport default QuestionCard;"]},"metadata":{},"sourceType":"module"}